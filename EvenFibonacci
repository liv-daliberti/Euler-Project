"""
Created on Mon Apr 30 20:04:17 2018

@author: Liv d'Aliberti
"""

#Each new term in the Fibonacci sequence is generated by adding the previous
#two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not 
#exceed four million, find the sum of the even-valued terms.

def fibonnacci(a,b,limit):
    """
    Input: Three Integers
    Output: A list
    Purpose: Create a list of fibonacci numbers less than limit
    """
    current_fib_minus_one = b
    current_fib_minus_two = a
    fibonnacci_list = [current_fib_minus_two]
    
    while current_fib_minus_one < limit:
        fibonnacci_list.append(current_fib_minus_one)
        
        current_fib = current_fib_minus_two + current_fib_minus_one
        current_fib_minus_two = current_fib_minus_one
        current_fib_minus_one = current_fib
    
    return(fibonnacci_list)

def even_fibonnacci_sum(fibonnacci_list):
    """
    Input: List
    Output: Integer
    Purpose: Sum the even numbers in a fibbonnacci_list
    """
    
    even_fibonnacci_list = []
    sum_even_fibonnacci = 0
    
    for number in fibonnacci_list:
        if number % 2 == 0:
            even_fibonnacci_list.append(number)
    
    for number in even_fibonnacci_list:
        sum_even_fibonnacci = sum_even_fibonnacci + number
    
    return(sum_even_fibonnacci)
    
#Solution to this particular problem is 4,613,732
    
