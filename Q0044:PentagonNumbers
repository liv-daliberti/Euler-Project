"""
Pentagonal numbers are generated by the formula, P_n=n(3n−1)/2. 

The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. 
However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their 
sum and difference are pentagonal and D = |Pk − Pj| is minimised; 
what is the value of D?
"""

def pentagon_number_list(length):
    """
    Purpose: Find pentagon numbers whose sum & difference are also
    pentagon numbers & output the D value as described by the above
    Formula
    Input: The number of n times the formula should run through pentagon
    equations
    Output: The int D value described above or, if no pentagon numbers exist,
    then the phrase 'no pentagon numbers'
    """
    
    n = 1
    pentagon_set = set() #collect all pentagon numbers
    
    difference_pentagon_sum = set()
    #collect pentagon number pairs whos difference is pentagonal & the sum
    
    while n < length:
        pentagon_n = int(n*((3*n) - 1)/2)       
        pentagon_set.add(pentagon_n)
        for i in pentagon_set:
            if (pentagon_n - i) in pentagon_set:
                difference_pentagon_sum.add((pentagon_n, i, pentagon_n+i))

        n = n + 1

    for i in difference_pentagon_sum:
        if i[2] in pentagon_set:
            return(abs(i[0] - i[1]))
    
    return('No Pentagon Numbers')
        
