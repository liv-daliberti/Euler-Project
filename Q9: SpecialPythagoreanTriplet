"""
Created on Sun May  6 23:36:16 2018

@author: Liv d'Aliberti
"""

#A Pythagorean triplet is a set of three natural numbers, 
#a < b < c, for which,

#a^2 + b^2 = c^2
#For example, 32 + 42 = 9 + 16 = 25 = 52.

#There exists exactly one Pythagorean triplet for which a + b + c = 1000.
#Find the product abc.


import math

def pythagorean_triplet(upper_limit):
    """
    Input: Integer (upper limit of potential solution set & added solution
    value)
    Output: Integer (multiplied solution value)
    Purpose: find the pythagorean triplet for which a + b + c = 1000 and then
    find the product abc
    """
    
    a = 1
    b = 1
    a_square_list = []
    b_square_list = []
    
    
    while a < upper_limit:
        squared = a * a
        a_square_list.append(squared)
        a = a + 1
    
    while b < upper_limit:
        squared = b * b
        b_square_list.append(squared)
        b = b + 1
    
    for a_squared in a_square_list:
        for b_squared in b_square_list:
            c_squared = a_squared + b_squared
            a = math.sqrt(a_squared)
            b = math.sqrt(b_squared)
            c = math.sqrt(c_squared)
            summed_values = a + b + c
            
            if summed_values == upper_limit:
                #print(a, b, c, summed_values)
                solution = a*b*c
    
    return(solution)
    
# The solution for this particular problem is: 31875000

